# -*- coding: utf-8 -*-
"""mid-term 2 problems

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1axV9Zs67XiQXh0JYLSwp8cW8KhEjYUFu
"""

def write_definitions_to_file(definitions_dict):

    filename = input(" ")

    with open(filename, 'w') as file:

        words_line = ' '.join(definitions_dict.keys())

        file.write(words_line + '\n')



        for definition in definitions_dict.values():

            file.write(definition + '\n')



    print(f"Definitions have been successfully saved to {filename}")

def write_dictionary_to_file(dictionary):
    filename = input("Enter the filename: ")

    with open(filename, 'w') as f:
        f.write(' '.join(dictionary.keys()) + '\n')

        for key in dictionary:
            f.write(dictionary[key] + '\n')

#12
#18. Write a function called find_elements(arg1,arg2) that takes two nested lists,
such as the ones shown below. Then, the function creates a third nested list the
same size as the function's inputs. If two corresponding elements in arg1 and arg2
are the same, the function places a '$' character in the same position in the output
list. Otherwise, it places the sum of the two corresponding values. Print A and B
before calling the function and after that. Please asure that A and B do not change.




A = [ [8,2,8,4,5,7,1], [1,7,6,3,2], [0,4,5,8,1] ]
B = [ [1,4,1,2,1,7,6], [2,2,2,2,2], [1,1,5,0,0] ]
For this example, the function returns:
[ [9,6,9,6,6, ‘$’,7], [3,9,8,5, ‘$’], [1,5, ‘$’,8,1] ]

def write_definitions_to_file(definitions_dict):

   filename = input("Please enter the filename to save the definitions: ")
   with open(filename, 'w') as file:

        words_line = ' '.join(definitions_dict.keys())

        file.write(words_line + '\n')



        for definition in definitions_dict.values():

            file.write(definition + '\n')



    print(f"Definitions have been successfully saved to {filename}")



definitions_dict = {

    'cat': 'An animal that meows all the time.',

    'dog': 'A barker.',

    'elk': 'The elk is a magnificent animal that lives in the woods.'

}



write_definitions_to_file(definitions_dict)

def running_total(tup1):
  total = 0
  tup_total = tuple()
  for i in tup1:
    total +=1
    tup_total +=(total,)
    return tup_total
    print(running_totaL)

def find_elements(A, B):
  C= []
  for i in range(len(A))
:
C.append([])

